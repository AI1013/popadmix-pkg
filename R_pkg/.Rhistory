H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
colnames(dataset[n]) <- allele_matrix
allele_frequencies[[n-1]] <- colnames(dataset[n])
}
allele_frequencies
allele_frequencies[1]
allele_frequencies[1] <- colnames(dataset[2])
allele_frequencies[1]
cn
cn[1]
allele_matrix
cn[1] <- allele_matrix
names(allele_matrix) <- cn[1]
allele_matrix
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
#allele_matrix <- matrix(nrow = length(pop), ncol = length(loci), dimnames = list(pop, loci))
colnames(dataset[n]) <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
colnames(dataset[n]) <- rbind(colnames(dataset[n]), H)
}
rownames(colnames(dataset[n])) <- rn
colnames(colnames(dataset[n])) <- loci
colnames(dataset[n])<- as.matrix(colnames(dataset[n]))
allele_frequencies[[n-1]] <- colnames(dataset[n])
}
allele_frequencies
allele_matrix
dataset <- read.table("C:/Rstudio repository/Genotypes_Wang_etal_Mestizo.txt", header = FALSE, sep = "", stringsAsFactors = TRUE, fill = TRUE)
cn <- dataset[1,]
cn <- cn[!is.na(cn)]
dataset <- dataset[-2,]
dataset <- dataset[2:nrow(dataset), 6:ncol(dataset)]
names(dataset)[2:ncol(dataset)] <- cn
dataset[dataset == -9] <- NA
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
#allele_matrix <- matrix(nrow = length(pop), ncol = length(loci), dimnames = list(pop, loci))
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
allele_frequencies
allele_matrix
load("C:/Rstudio repository/R_pkg/data/allele.frequency.RData")
View(allele.frequency)
allele.frequency[["TCTA015M_22"]]
View(allele_frequencies)
length(allele_frequencies)
dim(allele_frequencies)
cn
cn[1]
a<-cn[1]
a
a <- allele_matrix
a
cn[1] <- allele_matrix
colnames(dataset[2]) <- allele_matrix
allele.frequency
allele_matrix
typeof(allele_matrix)
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
#allele_matrix <- matrix(nrow = length(pop), ncol = length(loci), dimnames = list(pop, loci))
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
allele_frequencies[[1]]
typeof(allele_frequencies[[1]])
load("C:/Rstudio repository/R_pkg/data/allele.frequency.RData")
View(allele.frequency)
allele.frequency[["GTTTT002P_1"]]
typeof(allele.frequency[["GTTTT002P_1"]])
?names
names(allele_frequencies[[1]]) <- cn[1]
allele_frequencies[[1]]
dataset <- read.table("C:/Rstudio repository/Genotypes_Wang_etal_Mestizo.txt", header = FALSE, sep = "", stringsAsFactors = TRUE, fill = TRUE)
cn <- dataset[1,]
cn <- cn[!is.na(cn)]
dataset <- dataset[-2,]
dataset <- dataset[2:nrow(dataset), 6:ncol(dataset)]
names(dataset)[2:ncol(dataset)] <- cn
dataset[dataset == -9] <- NA
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
allele_matrix
typeof(allele_matrix)
cn[1]
match("GTTTT002P_1", cn)
for (marker in cn) {
n <- match(marker, cn)
loci <- unique(dataset[n+1])
loci <- loci[!is.na(loci)]
marker <- NULL
for (popname in pop) {
subpop <- subset(dataset[n+1], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n]] <- allele_matrix
}
loci <- unique(dataset[n+1])
allele_frequencies
dataset <- read.table("C:/Rstudio repository/Genotypes_Wang_etal_Mestizo.txt", header = FALSE, sep = "", stringsAsFactors = TRUE, fill = TRUE)
cn <- dataset[1,]
cn <- cn[!is.na(cn)]
dataset <- dataset[-2,]
dataset <- dataset[2:nrow(dataset), 6:ncol(dataset)]
names(dataset)[2:ncol(dataset)] <- cn
dataset[dataset == -9] <- NA
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (marker in cn) {
n <- match(marker, cn)
loci <- unique(dataset[n+1])
loci <- loci[!is.na(loci)]
marker <- NULL
for (popname in pop) {
subpop <- subset(dataset[n+1], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
marker <- rbind(marker, H)
}
rownames(marker) <- rn
colnames(marker) <- loci
marker<- as.matrix(marker)
allele_frequencies[[n]] <- marker
}
allele_frequencies
cn
names(allele_frequencies) <- cn
allele_frequencies
dataset <- read.table("C:/Rstudio repository/Genotypes_Wang_etal_Mestizo.txt", header = FALSE, sep = "", stringsAsFactors = TRUE, fill = TRUE)
cn <- dataset[1,]
cn <- cn[!is.na(cn)]
dataset <- dataset[-2,]
dataset <- dataset[2:nrow(dataset), 6:ncol(dataset)]
names(dataset)[2:ncol(dataset)] <- cn
dataset[dataset == -9] <- NA
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in cn) {
loci <- unique(dataset[n+1])
loci <- loci[!is.na(loci)]
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
names(allele_frequencies) <- cn
allele_frequencies
dataset <- read.table("C:/Rstudio repository/Genotypes_Wang_etal_Mestizo.txt", header = FALSE, sep = "", stringsAsFactors = TRUE, fill = TRUE)
cn <- dataset[1,]
cn <- cn[!is.na(cn)]
dataset <- dataset[-2,]
dataset <- dataset[2:nrow(dataset), 6:ncol(dataset)]
names(dataset)[2:ncol(dataset)] <- cn
dataset[dataset == -9] <- NA
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
names(allele_frequencies) <- cn
allele_frequencies
load("C:/Rstudio repository/R_pkg/data/allele.frequency.RData")
View(allele.frequency)
View(allele_frequencies)
library(popadmix)
get_allele_freq()
get_allele_freq()
dataset <- read.table("C:/Rstudio repository/Genotypes_Wang_etal_Mestizo.txt", header = FALSE, sep = "", stringsAsFactors = TRUE, fill = TRUE)
cn <- dataset[1,]
cn <- cn[!is.na(cn)]
dataset <- dataset[-2,]
dataset <- dataset[2:nrow(dataset), 6:ncol(dataset)]
names(dataset)[2:ncol(dataset)] <- cn
dataset[dataset == -9] <- NA
View(dataset)
names(dataset$V6) <- population
names(dataset$V6) <- "population"
View(dataset)
names(dataset)[1] <- "population"
View(dataset)
dataset <- read.table("C:/Rstudio repository/Genotypes_Wang_etal_Mestizo.txt", header = FALSE, sep = "", stringsAsFactors = TRUE, fill = TRUE)
cn <- dataset[1,]
cn <- cn[!is.na(cn)]
dataset <- dataset[-2,]
dataset <- dataset[2:nrow(dataset), 6:ncol(dataset)]
names(dataset)[2:ncol(dataset)] <- cn
dataset[dataset == -9] <- NA
names(dataset)[1] <- "population"
setwd("C:/Rstudio repository")
save(dataset, file = "dataset_S1")
save(dataset, file = "dataset_S1.RData")
load("C:/Rstudio repository/dataset_S1.RData")
View(dataset)
get_allele_freq <- function(dataset){
cn <- dataset[1,]
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
names(allele_frequencies) <- cn
allele_frequencies
}
get_allele_freq("dataset_S1.RData")
get_allele_freq <- function(dataset){
cn <- dataset[2,]
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
names(allele_frequencies) <- cn
allele_frequencies
}
get_allele_freq("dataset_S1.RData")
get_allele_freq <- function(dataset){
cn <- dataset[1,2:ncol(dataset)]
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
names(allele_frequencies) <- cn
allele_frequencies
}
get_allele_freq("dataset_S1.RData")
get_allele_freq("dataset")
load("C:/Rstudio repository/dataset_S1.RData")
get_allele_freq <- function(dataset){
cn <- dataset[1,c(2:ncol(dataset))]
pop <- unique(dataset[,1])
pop <- as.character(pop)
rn <- pop
rn[2] <- "AMERICA"
allele_frequencies <- list()
for (n in 2:ncol(dataset)) {
loci <- unique(dataset[n])
loci <- loci[!is.na(loci)]
allele_matrix <- NULL
for (popname in pop) {
subpop <- subset(dataset[n], dataset[1] == popname)
subpop <- subpop[!is.na(subpop)]
sum_number <- length(subpop)
H <- NULL
for (ele in loci) {
number <- length(unlist(subset(subpop, subpop == ele)))
freq <- number / sum_number
H <- c(H, freq)
}
allele_matrix <- rbind(allele_matrix, H)
}
rownames(allele_matrix) <- rn
colnames(allele_matrix) <- loci
allele_matrix<- as.matrix(allele_matrix)
allele_frequencies[[n-1]] <- allele_matrix
}
names(allele_frequencies) <- cn
allele_frequencies
}
get_allele_freq("dataset_S1.RData")
View(dataset)
dataset
get_allele_freq("dataset")
cn <- dataset[1,c(2:ncol(dataset))]
pop <- unique(dataset[,1])
pop
cn
install.packages("processx")
.libPaths("c:/R/Library")
install.packages("processx")
library("devtools", lib.loc="c:/R/Library")
file.edit('~/.Renviron')
R_LIBS_USER="~/c:/R/Library"
.libPaths("C:/R/Library")
install.packages("roxygen2")
install.packages("devtools")
library("devtools", lib.loc="~/R/win-library/3.5")
install.packages("processx")
library("devtools", lib.loc="~/R/win-library/3.5")
install.packages("processx")
library("devtools", lib.loc="~/R/win-library/3.5")
library("roxygen2", lib.loc="~/R/win-library/3.5")
setwd("C:/Rstudio repository/R_pkg")
library(devtools)
install_github('AI1013/popadmix-pkg', subdir="R_pkg/")
install()
browseVignettes("popadmix")
check()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocStyle", version = "3.8")
check()
install.packages("rcmdcheck")
check()
install.packages("ggtern")
install.packages("RColorBrewer")
install.packages("kableExtra")
install.packages("knitr")
install.packages("rmarkdown")
browseVignettes("popadmix")
install_github('AI1013/popadmix-pkg', subdir="R_pkg/")
library("devtools", lib.loc="~/R/win-library/3.5")
library("roxygen2", lib.loc="~/R/win-library/3.5")
install_github('AI1013/popadmix-pkg', subdir="R_pkg/")
install.packages("rmarkdown", build_vignettes = TRUE)
install("popadmix", build_vignettes = TRUE)
install(build_vignettes = TRUE)
browseVignettes("popadmix")
?install_github
install_github('AI1013/popadmix-pkg', subdir="R_pkg/", build_vignettes = TRUE)
install_github('AI1013/popadmix-pkg', subdir="R_pkg/", build_vignettes = TRUE, ref = "trunk")
install_github('AI1013/popadmix-pkg', subdir="R_pkg/", build_vignettes = TRUE)
install_github('AI1013/popadmix-pkg', subdir="R_pkg/", build_vignettes = TRUE)
